apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.protobuf'

protobuf {
    def osx = osdetector.os == "osx" ? ":osx-x86_64" : ""

    protoc {
        artifact = "com.google.protobuf:protoc:3.6.1$osx"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0$osx"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

sourceSets {
    main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
    main.java.srcDirs += "$projectDir/src/main/proto"
}

processResources {
    exclude('**/*.proto')
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", 'OPEN_WEATHER_BASE_URL', '"https://api.openweathermap.org/data/2.5/"'
        buildConfigField "String", 'OPEN_WEATHER_API_KEY', '"dfc3d17632993a8fd49021d3c3d20f96"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'

    implementation project(":domain")

    // Hilt
    implementation "com.google.dagger:hilt-android:2.37"
    kapt "com.google.dagger:hilt-compiler:2.37"

    // Timber
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Retrofit
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // Reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"

    // Preferences DataStore & Protobuf
    implementation "com.google.protobuf:protobuf-lite:3.0.1"
    implementation "androidx.datastore:datastore-core:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}